import $ from 'jquery';
import _ from 'underscore';
import Backbone from 'backbone';

import ContactView from 'app/views/contact_view';

const RolodexView = Backbone.View.extend({
  initialize: function(options) {
    // this.$el is now $('main')

    // Keep track of important sub-elements
    this.listElement = this.$('#contact-cards');
    this.modalElement = this.$('#contact-details');

    // Generate & track Contact Cards (list view)
    this.contactCards = [];
    this.contactTemplate = _.template($('#tmpl-contact-card').html());

    // create contactCards for each Contact (this.model is the Rolodex Collection of Contacts)
    this.model.forEach(function(contact) {
      this.addContactCard(contact);
    }, this);

    // listen for new Contacts in Rolodex. For any: generate new card, re-render view
    this.listenTo(this.model, 'add', this.addContactCard);
    this.listenTo(this.model, 'update', this.render);

    // Keep track of modal element/template
    this.modalSection = this.$('#contact-details');
    this.modalTemplate = _.template($('#tmpl-contact-details').html());
  },

  render: function() {
    // reset list to empty; hide modal
    this.modalSection.hide();
    this.listElement.empty();

    // render each card, add to <ul>
    this.contactCards.forEach(function(card) {
      card.render();

      this.listElement.append(card.$el);
    }, this);

    return this;
  },

  events: {
    'click #contact-details': 'suppressModalHide'
  },

  addContactCard: function(contact) {
    // Make new card
    var card = new ContactView({
      model: contact,
      template: this.contactTemplate
    });

    // Listen for any clicks on this card
    this.listenTo(card, 'contact:click', this.showModal);

    // Add card to contactCards array
    this.contactCards.push(card);
  },

  showModal: function(contact) {
    // console.log('This will SHOW MODAL >--------<'); // NOTE: log
    // console.log(contact); // NOTE: log

    // set the needed values for template
    var html = this.modalTemplate({
      name: contact.name,
      email: contact.email,
      phone: contact.phone
    });

    // set the modalElement html to the html generated by template & show modal
    this.modalElement.html(html);
    this.modalElement.show();

    return this;
  },

  suppressModalHide: function(event) {
    // prevent click on Modal from bubbling up (which would trigger hideModal)
    event.stopPropagation();
  }

});

export default RolodexView;
